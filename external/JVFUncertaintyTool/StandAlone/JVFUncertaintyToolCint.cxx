//
// File generated by /opt/ROOT/v5-34-00-patches/bin/rootcint at Wed Oct 30 15:54:10 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIStandAlonedIJVFUncertaintyToolCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JVFUncertaintyToolCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JVFUncertaintyTool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JVFUncertaintyTool(void *p = 0);
   static void *newArray_JVFUncertaintyTool(Long_t size, void *p);
   static void delete_JVFUncertaintyTool(void *p);
   static void deleteArray_JVFUncertaintyTool(void *p);
   static void destruct_JVFUncertaintyTool(void *p);
   static void streamer_JVFUncertaintyTool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JVFUncertaintyTool*)
   {
      ::JVFUncertaintyTool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JVFUncertaintyTool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JVFUncertaintyTool", ::JVFUncertaintyTool::Class_Version(), "./../JVFUncertaintyTool/JVFUncertaintyTool.h", 112,
                  typeid(::JVFUncertaintyTool), DefineBehavior(ptr, ptr),
                  &::JVFUncertaintyTool::Dictionary, isa_proxy, 0,
                  sizeof(::JVFUncertaintyTool) );
      instance.SetNew(&new_JVFUncertaintyTool);
      instance.SetNewArray(&newArray_JVFUncertaintyTool);
      instance.SetDelete(&delete_JVFUncertaintyTool);
      instance.SetDeleteArray(&deleteArray_JVFUncertaintyTool);
      instance.SetDestructor(&destruct_JVFUncertaintyTool);
      instance.SetStreamerFunc(&streamer_JVFUncertaintyTool);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JVFUncertaintyTool*)
   {
      return GenerateInitInstanceLocal((::JVFUncertaintyTool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JVFUncertaintyTool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *JVFUncertaintyTool::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *JVFUncertaintyTool::Class_Name()
{
   return "JVFUncertaintyTool";
}

//______________________________________________________________________________
const char *JVFUncertaintyTool::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JVFUncertaintyTool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JVFUncertaintyTool::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JVFUncertaintyTool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JVFUncertaintyTool::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JVFUncertaintyTool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JVFUncertaintyTool::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JVFUncertaintyTool*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void JVFUncertaintyTool::Streamer(TBuffer &R__b)
{
   // Stream an object of class JVFUncertaintyTool.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.ReadStaticArray((float*)JVFup_HS);
      R__b.ReadStaticArray((float*)JVFdw_HS);
      R__b >> drcut;
      R__b >> _GeV;
      R__b.CheckByteCount(R__s, R__c, JVFUncertaintyTool::IsA());
   } else {
      R__c = R__b.WriteVersion(JVFUncertaintyTool::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.WriteArray(JVFup_HS, 3);
      R__b.WriteArray(JVFdw_HS, 3);
      R__b << drcut;
      R__b << _GeV;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void JVFUncertaintyTool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JVFUncertaintyTool.
      TClass *R__cl = ::JVFUncertaintyTool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JVFup_HS[3]", JVFup_HS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JVFdw_HS[3]", JVFdw_HS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drcut", &drcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_GeV", &_GeV);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_JVFUncertaintyTool(void *p) {
      return  p ? new(p) ::JVFUncertaintyTool : new ::JVFUncertaintyTool;
   }
   static void *newArray_JVFUncertaintyTool(Long_t nElements, void *p) {
      return p ? new(p) ::JVFUncertaintyTool[nElements] : new ::JVFUncertaintyTool[nElements];
   }
   // Wrapper around operator delete
   static void delete_JVFUncertaintyTool(void *p) {
      delete ((::JVFUncertaintyTool*)p);
   }
   static void deleteArray_JVFUncertaintyTool(void *p) {
      delete [] ((::JVFUncertaintyTool*)p);
   }
   static void destruct_JVFUncertaintyTool(void *p) {
      typedef ::JVFUncertaintyTool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_JVFUncertaintyTool(TBuffer &buf, void *obj) {
      ((::JVFUncertaintyTool*)obj)->::JVFUncertaintyTool::Streamer(buf);
   }
} // end of namespace ROOT for class ::JVFUncertaintyTool

/********************************************************
* ../StandAlone/JVFUncertaintyToolCint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJVFUncertaintyToolCint();

extern "C" void G__set_cpp_environmentJVFUncertaintyToolCint() {
  G__cpp_reset_tagtableJVFUncertaintyToolCint();
}
#include <new>
extern "C" int G__cpp_dllrevJVFUncertaintyToolCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JVFUncertaintyTool */
static int G__JVFUncertaintyToolCint_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JVFUncertaintyTool* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JVFUncertaintyTool(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) JVFUncertaintyTool(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JVFUncertaintyTool[n];
       } else {
         p = new((void*) gvp) JVFUncertaintyTool[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JVFUncertaintyTool;
       } else {
         p = new((void*) gvp) JVFUncertaintyTool;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JVFUncertaintyTool*) G__getstructoffset())->isPileUpJet(*((const TLorentzVector*) G__int(libp->para[0])), *(vector<TLorentzVector>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((JVFUncertaintyTool*) G__getstructoffset())->getJVFcut((const float) G__double(libp->para[0]), (const bool) G__int(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const bool) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((JVFUncertaintyTool*) G__getstructoffset())->UseGeV((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((JVFUncertaintyTool*) G__getstructoffset())->UseGeV();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JVFUncertaintyTool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JVFUncertaintyTool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JVFUncertaintyTool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JVFUncertaintyTool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JVFUncertaintyTool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JVFUncertaintyTool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JVFUncertaintyTool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JVFUncertaintyTool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JVFUncertaintyToolCint_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JVFUncertaintyTool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JVFUncertaintyToolCint_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JVFUncertaintyTool* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JVFUncertaintyTool(*(JVFUncertaintyTool*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JVFUncertaintyTool G__TJVFUncertaintyTool;
static int G__JVFUncertaintyToolCint_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JVFUncertaintyTool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JVFUncertaintyTool*) (soff+(sizeof(JVFUncertaintyTool)*i)))->~G__TJVFUncertaintyTool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JVFUncertaintyTool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JVFUncertaintyTool*) (soff))->~G__TJVFUncertaintyTool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JVFUncertaintyToolCint_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JVFUncertaintyTool* dest = (JVFUncertaintyTool*) G__getstructoffset();
   *dest = *(JVFUncertaintyTool*) libp->para[0].ref;
   const JVFUncertaintyTool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JVFUncertaintyTool */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJVFUncertaintyToolCint {
 public:
  G__Sizep2memfuncJVFUncertaintyToolCint(): p(&G__Sizep2memfuncJVFUncertaintyToolCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJVFUncertaintyToolCint::*p)();
};

size_t G__get_sizep2memfuncJVFUncertaintyToolCint()
{
  G__Sizep2memfuncJVFUncertaintyToolCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJVFUncertaintyToolCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool))) {
     JVFUncertaintyTool *G__Lderived;
     G__Lderived=(JVFUncertaintyTool*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool),G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool),G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJVFUncertaintyToolCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JVFUncertaintyTool */
static void G__setup_memvarJVFUncertaintyTool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool));
   { JVFUncertaintyTool *p; p=(JVFUncertaintyTool*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->JVFup_HS)-(long)(p)),102,0,0,-1,-1,-1,1,"JVFup_HS[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->JVFdw_HS)-(long)(p)),102,0,0,-1,-1,-1,1,"JVFdw_HS[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drcut)-(long)(p)),102,0,0,-1,-1,-1,1,"drcut=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_GeV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJVFUncertaintyToolCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJVFUncertaintyTool(void) {
   /* JVFUncertaintyTool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool));
   G__memfunc_setup("JVFUncertaintyTool",1818,G__JVFUncertaintyToolCint_225_0_1, 105, G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"AntiKt4TopoEM\"' jetAlgo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPileUpJet",1102,G__JVFUncertaintyToolCint_225_0_2, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 10 - jet u 'vector<TLorentzVector,allocator<TLorentzVector> >' 'vector<TLorentzVector>' 11 - truthJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJVFcut",882,G__JVFUncertaintyToolCint_225_0_3, 102, -1, -1, 0, 5, 1, 1, 0, 
"f - - 10 - JVFcutNominal g - - 10 - isPileUp "
"f - - 10 - pT_jet f - - 10 - eta_det "
"g - - 10 - isUp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseGeV",559,G__JVFUncertaintyToolCint_225_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' useGeV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JVFUncertaintyToolCint_225_0_5, 85, G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JVFUncertaintyTool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JVFUncertaintyToolCint_225_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JVFUncertaintyTool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JVFUncertaintyToolCint_225_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JVFUncertaintyTool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JVFUncertaintyToolCint_225_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JVFUncertaintyTool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JVFUncertaintyToolCint_225_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JVFUncertaintyToolCint_225_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JVFUncertaintyTool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JVFUncertaintyToolCint_225_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JVFUncertaintyTool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JVFUncertaintyToolCint_225_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JVFUncertaintyTool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JVFUncertaintyToolCint_225_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JVFUncertaintyTool::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JVFUncertaintyTool", 1818, G__JVFUncertaintyToolCint_225_0_17, (int) ('i'), G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool), -1, 0, 1, 1, 1, 0, "u 'JVFUncertaintyTool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JVFUncertaintyTool", 1944, G__JVFUncertaintyToolCint_225_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JVFUncertaintyToolCint_225_0_19, (int) ('u'), G__get_linked_tagnum(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool), -1, 1, 1, 1, 1, 0, "u 'JVFUncertaintyTool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJVFUncertaintyToolCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJVFUncertaintyToolCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJVFUncertaintyToolCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JVFUncertaintyToolCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_JVFUncertaintyTool = { "JVFUncertaintyTool" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJVFUncertaintyToolCint() {
  G__JVFUncertaintyToolCintLN_TClass.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TBuffer.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMemberInspector.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TObject.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TNamed.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TString.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_TLorentzVector.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_JVFUncertaintyTool.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJVFUncertaintyToolCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TString);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_JVFUncertaintyTool),sizeof(JVFUncertaintyTool),-1,62720,(char*)NULL,G__setup_memvarJVFUncertaintyTool,G__setup_memfuncJVFUncertaintyTool);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__JVFUncertaintyToolCintLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupJVFUncertaintyToolCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupJVFUncertaintyToolCint()");
  G__set_cpp_environmentJVFUncertaintyToolCint();
  G__cpp_setup_tagtableJVFUncertaintyToolCint();

  G__cpp_setup_inheritanceJVFUncertaintyToolCint();

  G__cpp_setup_typetableJVFUncertaintyToolCint();

  G__cpp_setup_memvarJVFUncertaintyToolCint();

  G__cpp_setup_memfuncJVFUncertaintyToolCint();
  G__cpp_setup_globalJVFUncertaintyToolCint();
  G__cpp_setup_funcJVFUncertaintyToolCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJVFUncertaintyToolCint();
  return;
}
class G__cpp_setup_initJVFUncertaintyToolCint {
  public:
    G__cpp_setup_initJVFUncertaintyToolCint() { G__add_setup_func("JVFUncertaintyToolCint",(G__incsetup)(&G__cpp_setupJVFUncertaintyToolCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJVFUncertaintyToolCint() { G__remove_setup_func("JVFUncertaintyToolCint"); }
};
G__cpp_setup_initJVFUncertaintyToolCint G__cpp_setup_initializerJVFUncertaintyToolCint;

